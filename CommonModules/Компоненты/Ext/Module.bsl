
///////////////////////////////////////////////////////////////////////////////
// API (Info)

#Область API_Info

Функция ПроксиКомпоненты(Компонента, ПопыткаПодключения = 1) Экспорт
	
	АдресWSDL =                                            
		"http://" + Компонента.Хост + ":" + Формат(Компонента.Порт, "ЧГ=0") + "/Info?wsdl";		
	Определение = Новый WSОпределения(АдресWSDL);	
	Прокси = Новый WSПрокси(Определение, "http://info.ak.ru/", "Info", "InfoPort");
			
	Возврат Прокси;
	
КонецФункции

Функция КомпонентаДоступна(Компонента) Экспорт
			
	Возврат ПроксиКомпоненты(Компонента) <> Неопределено;
	
КонецФункции

Функция ВерсияКомпоненты(Компонента) Экспорт
	
	Версия = НСтр("ru = 'API компоненты не доступно.'");;	
	
	Прокси = ПроксиКомпоненты(Компонента);
	Если Прокси <> Неопределено Тогда		
		Версия = Прокси.version();	
	КонецЕсли;			
	
	Возврат Версия;
		
КонецФункции

// Прикладное

Функция ЛогиКомпоненты(Компонента) Экспорт
	
	Результат = Новый Массив();
	
	Попытка
		Прокси = ПроксиКомпоненты(Компонента);
		Если Прокси <> Неопределено Тогда
			// todo: метод без параметров, но 1С упорно его видит
			Параметры = Прокси.ФабрикаXDTO.Создать("http://info.ak.ru/", "logs");
			ЛогиXDTO =  Прокси.logs(Параметры);
			Для Каждого ЛогXDTO Из ЛогиXDTO.return Цикл
				Результат.Добавить(ЛогXDTO);
			КонецЦикла;
		КонецЕсли;
	Исключение
		Сообщить(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));		
	КонецПопытки;
		
	Возврат Результат;
		
КонецФункции

Функция Сообщения(Компонента, Лог, НачалоПериода, КонецПериода) Экспорт
	
	Результат = Новый Массив();
	
	Если Не ЗначениеЗаполнено(Лог) Тогда
		Сообщить(НСтр("ru = 'Не заполнено имя файла лога'"));
		Возврат Результат;		
	КонецЕсли;
	
	Прокси = ПроксиКомпоненты(Компонента);
	Если Прокси <> Неопределено Тогда
		ПараметрыXDTO = Прокси.ФабрикаXDTO.Создать("http://info.ak.ru/", "messagesByPeriod");		
		
		ПараметрыXDTO.connection = XDTOConnection(Прокси);		
		ПараметрыXDTO.connection.fileName = Лог;
		
		ПараметрыXDTO.from = НачалоПериода;
		ПараметрыXDTO.to   = КонецПериода;
				
		СообщенияXDTO = Прокси.messagesByPeriod(ПараметрыXDTO);
		Для Каждого СообщениеXDTO Из СообщенияXDTO.return Цикл
			Запись = Новый Структура("Период, Объект, Уровень, Текст");
			Запись.Период  = СообщениеXDTO.period;
			Запись.Объект  = СообщениеXDTO.objectLog.name;
			Запись.Уровень = СообщениеXDTO.level.name;
			Запись.Текст   = СообщениеXDTO.text;
			
			Результат.Добавить(Запись);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ОчиститьВсеСообщения(Компонента, Лог) Экспорт
	
	Результат = Ложь;
	
	Прокси = ПроксиКомпоненты(Компонента);
	Если Прокси <> Неопределено Тогда
		connection = XDTOConnection(Прокси);
		connection.fileName = Лог;		
				
		РезультатXDTO = Прокси.clearMessages(connection);
		Результат = Не РезультатXDTO.error;		
	КонецЕсли;
	
	Возврат Результат;
		
КонецФункции

#КонецОбласти


///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область СлужебныеПроцедурыИФункции

Функция XDTOConnection(Прокси)
	
	connection = Неопределено;
	
	Попытка
		connection = Прокси.ФабрикаXDTO.Создать("http://connection.logger.ak.ru/", "sqliteConnection");
	Исключение
		// Для совместимости с первыми версиями компоненты
		connection = Прокси.ФабрикаXDTO.Создать("http://info.ak.ru/", "sqliteConnection");
	КонецПопытки;
	
	Возврат connection;
	
КонецФункции

#КонецОбласти